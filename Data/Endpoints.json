[
  {
    "Name": "audit-events-query",
    "Path": "/installation-tokens/queries/audit-events/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:read",
    "Description": "Search for installation token audit events",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 1000,
        "Default": "50",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "audit-events-read",
    "Path": "/installation-tokens/entities/audit-events/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:read",
    "Description": "Retrieve installation token audit events",
    "Parameters": [
      {
        "Dynamic": "EventIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "One or more event identifiers"
      }
    ]
  },
  {
    "Name": "BatchActiveResponderCmd",
    "Path": "/real-time-response/combined/batch-active-responder-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Issue a Real-time Response command to a batch session using Active Responder permissions",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "cp",
          "csrutil",
          "encrypt",
          "env",
          "eventlog",
          "filehash",
          "get",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "kill",
          "ls",
          "map",
          "memdump",
          "mkdir",
          "mount",
          "mv",
          "netstat",
          "ps",
          "reg delete",
          "reg load",
          "reg query",
          "reg set",
          "reg unload",
          "restart",
          "rm",
          "runscript",
          "shutdown",
          "umount",
          "unmap",
          "users",
          "xmemdump",
          "zip"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "BatchId",
        "Name": "batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response batch session identifier"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "OptionalHostIds",
        "Name": "optional_hosts",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "\\w{32}",
        "Description": "Restrict the request to specific host identifiers"
      }
    ]
  },
  {
    "Name": "BatchAdminCmd",
    "Path": "/real-time-response/combined/batch-admin-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Issue a Real-time Response command to a batch session using Admin permissions",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "cp",
          "csrutil",
          "encrypt",
          "env",
          "eventlog",
          "filehash",
          "get",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "kill",
          "ls",
          "map",
          "memdump",
          "mkdir",
          "mount",
          "mv",
          "netstat",
          "ps",
          "put",
          "reg delete",
          "reg load",
          "reg query",
          "reg set",
          "reg unload",
          "restart",
          "rm",
          "run",
          "runscript",
          "shutdown",
          "umount",
          "unmap",
          "users",
          "xmemdump",
          "zip"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "BatchId",
        "Name": "batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response batch session identifier"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "OptionalHostIds",
        "Name": "optional_hosts",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "\\w{32}",
        "Description": "Restrict the request to specific host identifiers"
      }
    ]
  },
  {
    "Name": "BatchCmd",
    "Path": "/real-time-response/combined/batch-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Issue a Real-time Response command to a batch session",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "csrutil",
          "env",
          "eventlog",
          "filehash",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "ls",
          "mount",
          "netstat",
          "ps",
          "reg query",
          "users"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "BatchId",
        "Name": "batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response batch session identifier"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "OptionalHostIds",
        "Name": "optional_hosts",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "\\w{32}",
        "Description": "Restrict the request to specific host identifiers"
      }
    ]
  },
  {
    "Name": "BatchGetCmd",
    "Path": "/real-time-response/combined/batch-get-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Send a 'get' request to a batch Real-time Response session",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "BatchId",
        "Name": "batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Required": true,
        "Description": "Real-time Response batch session identifier"
      },
      {
        "Dynamic": "Path",
        "Name": "file_path",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "Full path to the file to be retrieved from each host"
      },
      {
        "Dynamic": "OptionalHosts",
        "Name": "optional_hosts",
        "Type": "array",
        "In": [
          "body"
        ],
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "Restrict the request to specific host identifiers"
      }
    ]
  },
  {
    "Name": "BatchGetCmdStatus",
    "Path": "/real-time-response/combined/batch-get-command/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Retrieve the status of a 'get' command issued to a batch Real-time Response session",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "BatchGetCmdReqId",
        "Name": "batch_get_cmd_req_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Batch 'get' command request identifier"
      }
    ]
  },
  {
    "Name": "BatchInitSessions",
    "Path": "/real-time-response/combined/batch-init-session/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Initialize a Real-time Response session on multiple hosts",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "ExistingBatchId",
        "Name": "existing_batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Add hosts to an existing batch session"
      },
      {
        "Dynamic": "HostIds",
        "Name": "host_ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "Host identifiers"
      },
      {
        "Dynamic": "QueueOffline",
        "Name": "queue_offline",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Add sessions in this batch to the offline queue if the hosts do not initialize"
      }
    ]
  },
  {
    "Name": "BatchRefreshSessions",
    "Path": "/real-time-response/combined/batch-refresh-session/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Refresh a batch Real-time Response session, to avoid hitting the default timeout of 10 minutes",
    "Parameters": [
      {
        "Dynamic": "Timeout",
        "Name": "timeout",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Default": "30",
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "BatchId",
        "Name": "batch_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response batch session identifier"
      },
      {
        "Dynamic": "RemoveHostIds",
        "Name": "hosts_to_remove",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "\\w{32}",
        "Description": "Host identifiers to remove from the batch session"
      }
    ]
  },
  {
    "Name": "CreateCSPMAzureAccount",
    "Path": "/cloud-connect-azure/entities/account/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:write",
    "Description": "Creates a new Azure account and generates a script to grant access to the Falcon platform",
    "Parameters": [
      {
        "Dynamic": "SubscriptionId",
        "Name": "subscription_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Pattern": "^[0-9a-z-]{36}$",
        "Description": "Azure subscription identifier"
      },
      {
        "Dynamic": "TenantId",
        "Name": "tenant_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Azure tenant identifier"
      }
    ]
  },
  {
    "Name": "CreateCSPMGCPAccount",
    "Path": "/cloud-connect-gcp/entities/account/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:write",
    "Description": "Creates a new GCP account and generates a script to grant access to the Falcon platform",
    "Parameters": [
      {
        "Dynamic": "ParentId",
        "Name": "parent_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "GCP parent identifier"
      }
    ]
  },
  {
    "Name": "createDeviceControlPolicies",
    "Path": "/policy/entities/device-control/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "device-control-policies:write",
    "Description": "Create Device Control Policies",
    "Parameters": [
      {
        "Dynamic": "CloneId",
        "Name": "clone_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Copy settings from an existing policy",
        "Pattern": "\\w{32}"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Policy description"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "Policy name"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "hashtable",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "A hashtable defining policy settings"
      }
    ]
  },
  {
    "Name": "createFirewallPolicies",
    "Path": "/policy/entities/firewall/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Create Firewall Policies",
    "Parameters": [
      {
        "Dynamic": "CloneId",
        "Name": "clone_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Copy settings from an existing policy",
        "Pattern": "\\w{32}"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Policy description"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "Policy name"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      }
    ]
  },
  {
    "Name": "createHostGroups",
    "Path": "/devices/entities/host-groups/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "host-group:write",
    "Description": "Create Host Groups",
    "Parameters": [
      {
        "Dynamic": "AssignmentRule",
        "Name": "assignment_rule",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "An FQL filter expression to dynamically assign hosts"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Group description"
      },
      {
        "Dynamic": "GroupType",
        "Name": "group_type",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Enum": [
          "static",
          "dynamic"
        ],
        "Description": "Group type"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "Group name"
      }
    ]
  },
  {
    "Name": "CreateIOC",
    "Path": "/indicators/entities/iocs/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:write",
    "Description": "Create custom IOCs",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Custom IOC description"
      },
      {
        "Dynamic": "ExpirationDays",
        "Name": "expiration_days",
        "Type": "int",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Number of days before expiration (for 'domain', 'ipv4', and 'ipv6')"
      },
      {
        "Dynamic": "Policy",
        "Name": "policy",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "detect",
          "none"
        ],
        "Description": "Action to take when a host observes the custom IOC"
      },
      {
        "Dynamic": "ShareLevel",
        "Name": "share_level",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Enum": [
          "red"
        ],
        "Description": "Custom IOC visibility level"
      },
      {
        "Dynamic": "Source",
        "Name": "source",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC source"
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      }
    ]
  },
  {
    "Name": "CreateOrUpdateAWSSettings",
    "Path": "/cloud-connect-aws/entities/settings/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:write",
    "Description": "Create or update Global Settings which are applicable to all provisioned AWS accounts",
    "Parameters": [
      {
        "Dynamic": "CloudtrailId",
        "Name": "cloudtrail_bucket_owner_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Pattern": "\\d{12}",
        "Description": "The 12 digit AWS account which is hosting the centralized S3 bucket of containing cloudtrail logs from multiple accounts."
      },
      {
        "Dynamic": "ExternalId",
        "Name": "static_external_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "By setting this value, all subsequent accounts that are provisioned will default to using this value as their external ID."
      }
    ]
  },
  {
    "Name": "createPreventionPolicies",
    "Path": "/policy/entities/prevention/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "prevention-policies:write",
    "Description": "Create Prevention Policies",
    "Parameters": [
      {
        "Dynamic": "CloneId",
        "Name": "clone_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Copy settings from an existing policy",
        "Pattern": "\\w{32}"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Policy description"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "Policy name"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "An array of hashtables defining policy settings"
      }
    ]
  },
  {
    "Name": "create-rule-group",
    "Path": "/fwmgr/entities/rule-groups/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Create new rule group on a platform for a customer with a name and description, and return the ID",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERNAME",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "CloneId",
        "Name": "clone_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Copy settings from an existing policy",
        "Pattern": "\\w{32}"
      },
      {
        "Dynamic": "Library",
        "Name": "library",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "If this flag is set to true then the rules will be cloned from the clone_id from the CrowdStrike Firewal Rule Groups Library."
      },
      {
        "Dynamic": "Comment",
        "Name": "comment",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Audit log comment for this action"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Description": "Description of the rule group",
        "Required": false
      },
      {
        "Dynamic": "Enabled",
        "Name": "enabled",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Description": "Status of the rule group",
        "Required": true
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Description": "Name of the rule group",
        "Required": true
      },
      {
        "Dynamic": "Rules",
        "Name": "rules",
        "Type": "array",
        "In": [
          "body"
        ],
        "Description": "An array of hashtables containing rule properties",
        "Required": false
      }
    ]
  },
  {
    "Name": "createSensorUpdatePoliciesV2",
    "Path": "/policy/entities/sensor-update/v2",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Create Sensor Update Policies",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The description to use when creating the policy"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "The name to use when creating the policy"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "hashtable",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "A hashtable defining policy settings"
      }
    ]
  },
  {
    "Name": "CreateUser",
    "Path": "/users/entities/users/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:write",
    "Description": "Create a user",
    "Parameters": [
      {
        "Dynamic": "FirstName",
        "Name": "firstName",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "User's first name"
      },
      {
        "Dynamic": "LastName",
        "Name": "lastName",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "User's last name"
      },
      {
        "Dynamic": "Password",
        "Name": "password",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "The user's password. If left blank, the system will generate an email asking them to set their password (recommended)"
      },
      {
        "Dynamic": "Username",
        "Name": "uid",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "A username; typically an email address"
      }
    ]
  },
  {
    "Name": "CrowdScore",
    "Path": "/incidents/combined/crowdscores/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:read",
    "Description": "List CrowdScore values",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 2500,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "score|asc",
          "score|desc",
          "timestamp|asc",
          "timestamp|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "customer-settings-read",
    "Path": "/installation-tokens/entities/customer-settings/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:read",
    "Description": "List installation token settings"
  },
  {
    "Name": "DeleteAWSAccounts",
    "Path": "/cloud-connect-aws/entities/accounts/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:write",
    "Description": "Delete a set of AWS Accounts by specifying their IDs",
    "Parameters": [
      {
        "Dynamic": "AccountIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more AWS account identifiers"
      }
    ]
  },
  {
    "Name": "deleteDeviceControlPolicies",
    "Path": "/policy/entities/device-control/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:write",
    "Description": "Delete Device Control policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more policy identifiers"
      }
    ]
  },
  {
    "Name": "deleteFirewallPolicies",
    "Path": "/policy/entities/firewall/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Delete Firewall policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more policy identifiers"
      }
    ]
  },
  {
    "Name": "deleteHostGroups",
    "Path": "/devices/entities/host-groups/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:write",
    "Description": "Delete Host Groups",
    "Parameters": [
      {
        "Dynamic": "GroupIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more group identifiers"
      }
    ]
  },
  {
    "Name": "DeleteIOC",
    "Path": "/indicators/entities/iocs/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:write",
    "Description": "Delete a custom IOC",
    "Parameters": [
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      }
    ]
  },
  {
    "Name": "deletePreventionPolicies",
    "Path": "/policy/entities/prevention/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:write",
    "Description": "Delete Prevention policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more policy identifiers"
      }
    ]
  },
  {
    "Name": "DeleteReport",
    "Path": "/falconx/entities/reports/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:write",
    "Description": "Delete sandbox reports",
    "Parameters": [
      {
        "Dynamic": "ReportId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Sandbox report identifier"
      }
    ]
  },
  {
    "Name": "delete-rule-groups",
    "Path": "/fwmgr/entities/rule-groups/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Delete Firewall Rule Groups",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERNAME",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "RuleGroupIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more rule group identifiers"
      },
      {
        "Dynamic": "Comment",
        "Name": "comment",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Audit log comment for this action"
      }
    ]
  },
  {
    "Name": "DeleteSampleV2",
    "Path": "/samples/entities/samples/v2",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "*/*"
    },
    "Permission": "falconx-sandbox:write",
    "Description": "Removes a sample, including file, meta and submissions from the collection",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "FileId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "SHA256 hash value of the file"
      }
    ]
  },
  {
    "Name": "deleteSensorUpdatePolicies",
    "Path": "/policy/entities/sensor-update/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Delete Sensor Update policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more policy identifiers"
      }
    ]
  },
  {
    "Name": "DeleteUser",
    "Path": "/users/entities/users/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:write",
    "Description": "Delete a user",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "user_uuid",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      }
    ]
  },
  {
    "Name": "DevicesCount",
    "Path": "/indicators/aggregates/devices-count/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "List the number of hosts that have observed a custom IOC",
    "Parameters": [
      {
        "Dynamic": "Count",
        "Type": "switch",
        "Required": true,
        "Description": "Retrieve the total number of hosts that have observed a custom IOC"
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      }
    ]
  },
  {
    "Name": "DevicesRanOn",
    "Path": "/indicators/queries/devices/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "List the host identifiers that have observed a custom IOC",
    "Parameters": [
      {
        "Dynamic": "Hosts",
        "Type": "switch",
        "Required": true,
        "Description": "Retrieve host identifiers for hosts that have observed a custom IOC"
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 100,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      }
    ]
  },
  {
    "Name": "DownloadSensorInstallerById",
    "Path": "/sensors/entities/download-installer/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-installers:read",
    "Description": "Download a sensor installer",
    "Parameters": [
      {
        "Dynamic": "InstallerId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 64,
        "Max": 64,
        "Pattern": "\\w{64}",
        "Description": "SHA256 hash value of the installer to download"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Pattern": "\\.(deb|exe|html|pkg|rpm)+$",
        "Description": "Destination path"
      }
    ]
  },
  {
    "Name": "entities.processes",
    "Path": "/processes/entities/processes/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "Retrieve detail about a process",
    "Parameters": [
      {
        "Dynamic": "ProcessIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more process identifiers"
      }
    ]
  },
  {
    "Name": "GetArtifacts",
    "Path": "/falconx/entities/artifacts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Download IOC packs, PCAP files, and other analysis artifacts",
    "Parameters": [
      {
        "Dynamic": "ArtifactId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Artifact identifier"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetAvailableRoleIds",
    "Path": "/user-roles/queries/user-role-ids-by-cid/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "List user role identifiers"
  },
  {
    "Name": "GetAWSAccounts",
    "Path": "/cloud-connect-aws/entities/accounts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:read",
    "Description": "List AWS Accounts",
    "Parameters": [
      {
        "Dynamic": "AccountIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\d{12}",
        "Description": "One or more AWS account identifiers"
      }
    ]
  },
  {
    "Name": "GetAWSSettings",
    "Path": "/cloud-connect-aws/combined/settings/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:read",
    "Description": "Retrieve a set of Global Settings which are applicable to all provisioned AWS accounts"
  },
  {
    "Name": "GetBehaviors",
    "Path": "/incidents/entities/behaviors/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:read",
    "Description": "List detailed information about behaviors",
    "Parameters": [
      {
        "Dynamic": "BehaviorIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 1,
        "Max": 500,
        "Description": "One or more behavior identifiers"
      }
    ]
  },
  {
    "Name": "GetCombinedSensorInstallersByQuery",
    "Path": "/sensors/combined/installers/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-installers:read",
    "Description": "List detailed sensor installer information",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Default": "100",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results",
        "Enum": [
          "release_date|asc",
          "release_date|desc",
          "version|asc",
          "version|desc"
        ]
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "GetCSPMAzureAccount",
    "Path": "/cloud-connect-azure/entities/account/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Return information about Azure account registration",
    "Parameters": [
      {
        "Dynamic": "SubscriptionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Parent": "resources",
        "Required": false,
        "Pattern": "^[0-9a-z-]{36}$",
        "Description": "SubscriptionIDs of accounts to select for this status operation. If this is empty then all accounts are returned."
      },
      {
        "Dynamic": "ScanType",
        "Name": "scan-type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Parent": "resources",
        "Required": false,
        "Enum": [
          "dry",
          "full"
        ],
        "Description": "Type of scan, dry or full, to perform on selected accounts"
      }
    ]
  },
  {
    "Name": "GetCSPMAzureUserScripts",
    "Path": "/cloud-connect-azure/entities/user-scripts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Outputs a script to run in an Azure environment to grant access to the Falcon platform"
  },
  {
    "Name": "GetCSPMAzureUserScriptsAttachment",
    "Path": "/cloud-connect-azure/entities/user-scripts-download/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Download a script to run in their cloud environment to grant us access to their Azure environment as a downloadable attachment"
  },
  {
    "Name": "GetCSPMCGPAccount",
    "Path": "/cloud-connect-gcp/entities/account/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Returns information about the current status of an GCP account.",
    "Parameters": [
      {
        "Dynamic": "ScanType",
        "Name": "scan-type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "dry",
          "full"
        ],
        "Description": "Type of scan, dry or full, to perform on selected accounts"
      },
      {
        "Dynamic": "ParentIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Pattern": "\\d{10,}",
        "Description": "Parent IDs of accounts"
      }
    ]
  },
  {
    "Name": "GetCSPMGCPUserScripts",
    "Path": "/cloud-connect-gcp/entities/user-scripts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Return a script for customer to run in their cloud environment to grant us access to their GCP environment"
  },
  {
    "Name": "GetCSPMGCPUserScriptsAttachment",
    "Path": "/cloud-connect-gcp/entities/user-scripts-download/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "d4c-registration:read",
    "Description": "Return a script for customer to run in their cloud environment to grant us access to their GCP environment as a downloadable attachment"
  },
  {
    "Name": "GetDetectSummaries",
    "Path": "/detects/entities/summaries/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "detects:read",
    "Description": "List detailed detection information",
    "Parameters": [
      {
        "Dynamic": "DetectionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 1,
        "Max": 1000,
        "Description": "One or more detection identifiers"
      }
    ]
  },
  {
    "Name": "getDeviceControlPolicies",
    "Path": "/policy/entities/device-control/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:read",
    "Description": "List detailed Device Control Policy information",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the Device Control Policies to return"
      }
    ]
  },
  {
    "Name": "GetDeviceDetails",
    "Path": "/devices/entities/devices/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "devices:read",
    "Description": "List detailed Host information",
    "Parameters": [
      {
        "Dynamic": "HostIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "The host agentIDs used to get details on"
      }
    ]
  },
  {
    "Name": "get-events",
    "Path": "/fwmgr/entities/events/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "List Firewall Management events",
    "Parameters": [
      {
        "Dynamic": "EventIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "[\\w-]{20}",
        "Description": "The events to retrieve, identified by ID"
      }
    ]
  },
  {
    "Name": "get-firewall-fields",
    "Path": "/fwmgr/entities/firewall-fields/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "List detailed information about Firewall Management fields",
    "Parameters": [
      {
        "Dynamic": "FieldIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The field identifiers to retrieve"
      }
    ]
  },
  {
    "Name": "getFirewallPolicies",
    "Path": "/policy/entities/firewall/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "List detailed information about Firewall Policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the Firewall Policies to return"
      }
    ]
  },
  {
    "Name": "getHostGroups",
    "Path": "/devices/entities/host-groups/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:read",
    "Description": "List detailed information about Host Groups",
    "Parameters": [
      {
        "Dynamic": "GroupIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "The IDs of the Host Groups to return"
      }
    ]
  },
  {
    "Name": "GetIncidents",
    "Path": "/incidents/entities/incidents/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:read",
    "Description": "List detailed information about Incidents",
    "Parameters": [
      {
        "Dynamic": "IncidentIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Max": 500
      }
    ]
  },
  {
    "Name": "GetIntelActorEntities",
    "Path": "/intel/entities/actors/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-actors:read",
    "Description": "List detailed information about Actors",
    "Parameters": [
      {
        "Dynamic": "ActorIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the actors you want to retrieve."
      },
      {
        "Dynamic": "Fields",
        "Name": "fields",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "__basic__",
        "Description": "The fields to return, or a predefined collection name surrounded by two underscores"
      }
    ]
  },
  {
    "Name": "GetIntelIndicatorEntities",
    "Path": "/intel/entities/indicators/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "falconx-indicators:read",
    "Description": "List detailed information about Indicators",
    "Parameters": [
      {
        "Dynamic": "IndicatorIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true
      }
    ]
  },
  {
    "Name": "GetIntelReportEntities",
    "Path": "/intel/entities/reports/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-reports:read",
    "Description": "List detailed information about Intel Reports",
    "Parameters": [
      {
        "Dynamic": "ReportIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the reports you want to retrieve."
      },
      {
        "Dynamic": "Fields",
        "Name": "fields",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "__basic__",
        "Description": "The fields to return, or a predefined collection name surrounded by two underscores"
      }
    ]
  },
  {
    "Name": "GetIntelReportPDF",
    "Path": "/intel/entities/report-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/octet-stream"
    },
    "Permission": "falconx-reports:read",
    "Description": "Download an Intel Report PDF",
    "Parameters": [
      {
        "Dynamic": "ReportId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The ID of the report you want to download as a PDF."
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Pattern": "\\.pdf$",
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetIntelRuleEntities",
    "Path": "/intel/entities/rules/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-rules:read",
    "Description": "List detailed information about Intel Rules",
    "Parameters": [
      {
        "Dynamic": "RuleIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The ids of rules to return."
      }
    ]
  },
  {
    "Name": "GetIntelRuleFile",
    "Path": "/intel/entities/rules-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/zip"
    },
    "Permission": "falconx-rules:read",
    "Description": "Download a specific threat intelligence ruleset zip file",
    "Parameters": [
      {
        "Dynamic": "RuleId",
        "Name": "id",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Rule set identifier"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Pattern": "\\.zip$",
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetIOC",
    "Path": "/indicators/entities/iocs/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "Get detailed information about an IOC",
    "Parameters": [
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Indicator type ['sha256', 'md5', 'domain', 'ipv4', 'ipv6']"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Indicator value"
      }
    ]
  },
  {
    "Name": "GetLatestIntelRuleFile",
    "Path": "/intel/entities/rules-latest-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/zip"
    },
    "Permission": "falconx-rules:read",
    "Description": "Download the latest threat intelligence ruleset zip file",
    "Parameters": [
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "snort-suricata-master",
          "snort-suricata-update",
          "snort-suricata-changelog",
          "yara-master",
          "yara-update",
          "yara-changelog",
          "common-event-format",
          "netwitness"
        ],
        "Description": "Rule news report type"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Pattern": "\\.zip$",
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetMalQueryDownloadV1",
    "Path": "/malquery/entities/download-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/octet-stream"
    },
    "Permission": "malquery:read",
    "Description": "Download a file indexed by MalQuery using its SHA256 value",
    "Parameters": [
      {
        "Dynamic": "Sha256",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 64,
        "Max": 64,
        "Description": "SHA256 value of the sample"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetMalQueryEntitiesSamplesFetchV1",
    "Path": "/malquery/entities/samples-fetch/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/zip"
    },
    "Permission": "malquery:read",
    "Description": "Download a zip containing Malquery samples (password: infected)",
    "Parameters": [
      {
        "Dynamic": "JobId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Sample job identifier"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "String",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Description": "Destination Path"
      }
    ]
  },
  {
    "Name": "GetMalQueryMetadataV1",
    "Path": "/malquery/entities/metadata/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "malquery:read",
    "Description": "Retrieve indexed files metadata by their hash",
    "Parameters": [
      {
        "Dynamic": "FileIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The file SHA256."
      }
    ]
  },
  {
    "Name": "GetMalQueryQuotasV1",
    "Path": "/malquery/aggregates/quotas/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "malquery:read",
    "Description": "Get information about search and download quotas in your environment"
  },
  {
    "Name": "GetMalQueryRequestV1",
    "Path": "/malquery/entities/requests/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "malquery:read",
    "Description": "Check the status and results of a MalQuery request",
    "Parameters": [
      {
        "Dynamic": "QueryIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Required": true,
        "Description": "MalQuery request identifier"
      }
    ]
  },
  {
    "Name": "GetMetadataV2",
    "Path": "/samples/entities/metadata/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "*/*"
    },
    "Permission": "samplestore:read",
    "Description": "Retrieves metadata information about a sample.",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "FileIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The file sha256."
      }
    ]
  },
  {
    "Name": "get-platforms",
    "Path": "/fwmgr/entities/platforms/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get platforms by ID, e.g., windows or mac or droid",
    "Parameters": [
      {
        "Dynamic": "PlatformIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the platforms to retrieve"
      }
    ]
  },
  {
    "Name": "get-policy-containers",
    "Path": "/fwmgr/entities/policies/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get policy container entities by policy ID",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "The policy container(s) to retrieve, identified by policy ID"
      }
    ]
  },
  {
    "Name": "getPreventionPolicies",
    "Path": "/policy/entities/prevention/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:read",
    "Description": "Retrieve a set of Prevention policies",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Prevention policy identifiers"
      }
    ]
  },
  {
    "Name": "getRemediations",
    "Path": "/spotlight/entities/remediations/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "spotlight-vulnerabilities:read",
    "Description": "Get information about remediations",
    "Parameters": [
      {
        "Dynamic": "RemediationIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Remediation identifiers"
      }
    ]
  },
  {
    "Name": "GetReports",
    "Path": "/falconx/entities/reports/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Get a full sandbox report.",
    "Parameters": [
      {
        "Dynamic": "ReportIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "ID of a report. Find a report ID from the response when submitting a malware sample or search with `/falconx/queries/reports/v1`."
      }
    ]
  },
  {
    "Name": "GetRoles",
    "Path": "/user-roles/entities/user-roles/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "Get info about a role",
    "Parameters": [
      {
        "Dynamic": "RoleIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "ID of a role. Find a role ID from `/customer/queries/roles/v1` or `/users/queries/roles/v1`."
      }
    ]
  },
  {
    "Name": "get-rule-groups",
    "Path": "/fwmgr/entities/rule-groups/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get rule group entities by ID. These groups do not contain their rule entites, just the rule IDs in precedence order.",
    "Parameters": [
      {
        "Dynamic": "GroupIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the rule groups to retrieve"
      }
    ]
  },
  {
    "Name": "get-rules",
    "Path": "/fwmgr/entities/rules/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get rule entities by ID (64-bit unsigned int as decimal string) or Family ID (32-character hexadecimal string)",
    "Parameters": [
      {
        "Dynamic": "RuleIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The rules to retrieve, identified by ID"
      }
    ]
  },
  {
    "Name": "GetSampleV2",
    "Path": "/samples/entities/samples/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/octet-stream"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Retrieves the file associated with the given ID (SHA256)",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "Sha256",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Pattern": "\\w{64}",
        "Required": true,
        "Description": "SHA256 hash value of the target file"
      },
      {
        "Dynamic": "PasswordProtected",
        "Name": "password_protected",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Flag whether the sample should be zipped and password protected with pass='infected'"
      }
    ]
  },
  {
    "Name": "GetSensorInstallersByQuery",
    "Path": "/sensors/queries/installers/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-installers:read",
    "Description": "Get sensor installer IDs by provided query",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Default": "100",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results",
        "Enum": [
          "release_date|asc",
          "release_date|desc",
          "version|asc",
          "version|desc"
        ]
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "GetSensorInstallersCCIDByQuery",
    "Path": "/sensors/queries/installers/ccid/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-installers:read",
    "Description": "Get CCID to use with sensor installers"
  },
  {
    "Name": "GetSensorInstallersEntities",
    "Path": "/sensors/entities/installers/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-installers:read",
    "Description": "Get sensor installer details by provided SHA256 IDs",
    "Parameters": [
      {
        "Dynamic": "FileIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the installers"
      }
    ]
  },
  {
    "Name": "getSensorUpdatePolicies",
    "Path": "/policy/entities/sensor-update/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Retrieve a set of Sensor Update Policies by specifying their IDs",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the Sensor Update Policies to return"
      }
    ]
  },
  {
    "Name": "getSensorUpdatePoliciesV2",
    "Path": "/policy/entities/sensor-update/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Retrieve a set of Sensor Update Policies with additional support for uninstall protection by specifying their IDs",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The IDs of the Sensor Update Policies to return"
      }
    ]
  },
  {
    "Name": "GetQueue",
    "Description": "Create a report of with status of queued Real-time Response sessions",
    "Permission": "real-time-response:read, real-time-response:write, real-time-response-admin:write",
    "Parameters": [
      {
        "Dynamic": "Days",
        "Type": "int",
        "Required": false,
        "Description": "Number of days worth of results to retrieve [Default: 7]"
      }
    ]
  },
  {
    "Name": "GetSubmissions",
    "Path": "/falconx/entities/submissions/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Check the status of a sandbox analysis. Time required for analysis varies but is usually less than 15 minutes.",
    "Parameters": [
      {
        "Dynamic": "SubmissionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "ID of a submitted malware sample. Find a submission ID from the response when submitting a malware sample or search with `/falconx/queries/submissions/v1`."
      }
    ]
  },
  {
    "Name": "GetSubmissionV2",
    "Path": "/samples/entities/submissions/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "samplestore:read",
    "Description": "Gets the submissions entities.",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "SubmissionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "A list of submission IDs"
      }
    ]
  },
  {
    "Name": "GetSummaryReports",
    "Path": "/falconx/entities/report-summaries/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Get a short summary version of a sandbox report.",
    "Parameters": [
      {
        "Dynamic": "Summary",
        "Type": "switch",
        "Required": true,
        "Description": "Retrieve summary information"
      },
      {
        "Dynamic": "ReportIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "ID of a summary. Find a summary ID from the response when submitting a malware sample or search with `/falconx/queries/reports/v1`."
      }
    ]
  },
  {
    "Name": "GetUserRoleIds",
    "Path": "/user-roles/queries/user-role-ids-by-user-uuid/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "Show role IDs of roles assigned to a user. For more information on each role, provide the role ID to `/customer/entities/roles/v1`.",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "user_uuid",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      }
    ]
  },
  {
    "Name": "getVulnerabilities",
    "Path": "/spotlight/entities/vulnerabilities/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "spotlight-vulnerabilities:read",
    "Description": "Get details on vulnerabilities by providing one or more IDs",
    "Parameters": [
      {
        "Dynamic": "VulnerabilityIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more vulnerability IDs. Find vulnerability IDs with GET /spotlight/queries/vulnerabilities/v2"
      }
    ]
  },
  {
    "Name": "GrantUserRoleIds",
    "Path": "/user-roles/entities/user-roles/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:write",
    "Description": "Assign one or more roles to a user",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "user_uuid",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "RoleIds",
        "Name": "roleIds",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "One or more roles to assign"
      }
    ]
  },
  {
    "Name": "InvokeDeploy",
    "Description": "Deploy and run an executable using Real-time Response",
    "Permission": "real-time-response:read, real-time-response-admin:write",
    "Parameters": [
      {
        "Dynamic": "Path",
        "Type": "string",
        "Required": true,
        "Description": "Path to the executable"
      },
      {
        "Dynamic": "HostIds",
        "Type": "array",
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "Host identifiers"
      },
      {
        "Dynamic": "Arguments",
        "Type": "string",
        "Required": false,
        "Description": "Command line arguments to include upon execution"
      },
      {
        "Dynamic": "Timeout",
        "Type": "int",
        "Required": false,
        "Min": 30,
        "Max": 600,
        "Description": "Length of time to wait for a result, in seconds"
      },
      {
        "Dynamic": "QueueOffline",
        "Type": "bool",
        "Required": false,
        "Description": "Add session to the offline queue if the host does not initialize"
      }
    ]
  },
  {
    "Name": "listAvailableStreamsOAuth2",
    "Path": "/sensors/entities/datafeed/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "streaming:read",
    "Description": "Discover all event streams in your environment",
    "Parameters": [
      {
        "Dynamic": "AppId",
        "Name": "appId",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 32,
        "Pattern": "\\w{1,32}",
        "Description": "Label that identifies your connection. Max: 32 alphanumeric characters (a-z, A-Z, 0-9)."
      },
      {
        "Dynamic": "Format",
        "Name": "format",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "json",
          "flatjson"
        ],
        "Description": "Format for streaming events"
      }
    ]
  },
  {
    "Name": "oauth2AccessToken",
    "Path": "/oauth2/token",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/x-www-form-urlencoded"
    },
    "Description": "Generate an OAuth2 access token",
    "Parameters": [
      {
        "Dynamic": "Id",
        "Name": "client_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Min": 32,
        "Max": 32,
        "Description": "The API client ID to authenticate your API requests"
      },
      {
        "Dynamic": "Secret",
        "Name": "client_secret",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Min": 40,
        "Max": 40,
        "Description": "The API client secret to authenticate your API requests"
      },
      {
        "Dynamic": "CID",
        "Name": "member_cid",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Min": 32,
        "Max": 32,
        "Description": "For MSSP Master CIDs, optionally lock the token to act on behalf of this member CID"
      },
      {
        "Dynamic": "Cloud",
        "Type": "string",
        "Required": false,
        "Enum": [
          "eu-1",
          "us-gov-1",
          "us-1",
          "us-2"
        ],
        "Description": "Destination CrowdStrike cloud"
      }
    ]
  },
  {
    "Name": "oauth2RevokeToken",
    "Path": "/oauth2/revoke",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/x-www-form-urlencoded"
    },
    "Description": "Revoke your current OAuth2 access token before the end of its standard lifespan"
  },
  {
    "Name": "PerformActionV2",
    "Path": "/devices/entities/devices-actions/v2",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "devices:write",
    "Description": "Perform actions on Hosts",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "contain",
          "lift_containment",
          "hide_host",
          "unhide_host"
        ],
        "Description": "The action to perform on the target Hosts"
      },
      {
        "Dynamic": "HostIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "Host identifiers"
      }
    ]
  },
  {
    "Name": "performDeviceControlPoliciesAction",
    "Path": "/policy/entities/device-control-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "device-control-policies:write",
    "Description": "Perform actions on Device Control Policies",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "add-host-group",
          "disable",
          "enable",
          "remove-host-group"
        ],
        "Description": "Action to perform"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Policy identifier"
      },
      {
        "Dynamic": "GroupId",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "Host Group identifier, used when adding or removing host groups"
      }
    ]
  },
  {
    "Name": "performFirewallPoliciesAction",
    "Path": "/policy/entities/firewall-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Perform actions on Firewall Policies",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "add-host-group",
          "disable",
          "enable",
          "remove-host-group"
        ],
        "Description": "Action to perform"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Policy identifier"
      },
      {
        "Dynamic": "GroupId",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "Host Group identifier, used when adding or removing host groups"
      }
    ]
  },
  {
    "Name": "performGroupAction",
    "Path": "/devices/entities/host-group-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "host-group:write",
    "Description": "Perform the specified action on the Host Groups specified in the request",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "add-hosts",
          "remove-hosts"
        ],
        "Description": "The action to perform on the target Host Groups"
      },
      {
        "Dynamic": "GroupId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "Host group identifier"
      },
      {
        "Dynamic": "FilterName",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Required": true,
        "Enum": [
          "device_id",
          "domain",
          "external_ip",
          "groups",
          "hostname",
          "local_ip",
          "mac_address",
          "os_version",
          "ou",
          "platform_name",
          "site",
          "system_manufacturer"
        ],
        "Description": "FQL filter name"
      },
      {
        "Dynamic": "FilterValue",
        "Name": "value",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Required": true,
        "Max": 500,
        "Description": "One or more values for use with the FQL filter"
      }
    ]
  },
  {
    "Name": "PerformIncidentAction",
    "Path": "/incidents/entities/incident-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:write",
    "Description": "Perform a set of actions on one or more incidents, such as adding tags or comments or updating the incident name or description",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Required": true,
        "Enum": [
          "add_tag",
          "delete_tag",
          "update_description",
          "update_name",
          "update_status"
        ],
        "Description": "Action to perform"
      },
      {
        "Dynamic": "ActionValue",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Required": true,
        "Description": "Value for the chosen action"
      },
      {
        "Dynamic": "IncidentIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "inc:\\w{32}:\\w{32}",
        "Description": "Incident identifiers"
      },
      {
        "Dynamic": "UpdateDetects",
        "Name": "update_detects",
        "Type": "bool",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Update the status of 'new' related detections"
      },
      {
        "Dynamic": "OverwriteDetects",
        "Name": "overwrite_detects",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Replace existing status for related detections"
      }
    ]
  },
  {
    "Name": "performPreventionPoliciesAction",
    "Path": "/policy/entities/prevention-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "prevention-policies:write",
    "Description": "Perform actions on Prevention Policies",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "add-host-group",
          "disable",
          "enable",
          "remove-host-group"
        ],
        "Description": "Action to perform"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Policy identifier"
      },
      {
        "Dynamic": "GroupId",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "Host Group identifier, used when adding or removing host groups"
      }
    ]
  },
  {
    "Name": "performSensorUpdatePoliciesAction",
    "Path": "/policy/entities/sensor-update-actions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Perform actions on Sensor Update Policies",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "add-host-group",
          "disable",
          "enable",
          "remove-host-group"
        ],
        "Description": "Action to perform"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Policy identifier"
      },
      {
        "Dynamic": "GroupId",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "action_parameters",
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "Host Group identifier, used when adding or removing host groups"
      }
    ]
  },
  {
    "Name": "PostMalQueryEntitiesSamplesMultidownloadV1",
    "Path": "/malquery/entities/samples-multidownload/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "malquery:write",
    "Description": "Schedule samples for download from MalQuery",
    "Parameters": [
      {
        "Dynamic": "SampleIds",
        "Name": "samples",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "List of sample sha256 ids"
      }
    ]
  },
  {
    "Name": "PostMalQueryExactSearchV1",
    "Path": "/malquery/queries/exact-search/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "malquery:write",
    "Description": "Search MalQuery for a combination of hex patterns and strings",
    "Parameters": [
      {
        "Dynamic": "FilterFileTypes",
        "Name": "filter_filetypes",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "(cdf|cdfv2|cjava|dalvik|doc|docx|elf32|elf64|email|html|hwp|java.arc|lnk|macho|pcap|pdf|pe32|pe64|perl|ppt|pptx|python|pythonc|rtf|swf|text|xls|xlsx)",
        "Description": "File types to include with the results"
      },
      {
        "Dynamic": "FilterMeta",
        "Name": "filter_meta",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "(sha256|md5|type|size|first_seen|label|family)",
        "Description": "Subset of metadata fields to include in the results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "MaxDate",
        "Name": "max_date",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "\\d{4}/\\d{2}/\\d{2}",
        "Description": "Limit results to files first seen after this date"
      },
      {
        "Dynamic": "MaxSize",
        "Name": "max_size",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Maximum file size, specified in bytes or multiples of KB/MB/GB"
      },
      {
        "Dynamic": "MinDate",
        "Name": "min_date",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "\\d{4}/\\d{2}/\\d{2}",
        "Description": "Limit results to files first seen after this date"
      },
      {
        "Dynamic": "MinSize",
        "Name": "min_size",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Minimum file size, specified in bytes or multiples of KB/MB/GB"
      },
      {
        "Dynamic": "PatternType",
        "Name": "type",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "patterns",
        "Required": true,
        "Enum": [
          "hex",
          "ascii",
          "wide"
        ],
        "Description": "Pattern type"
      },
      {
        "Dynamic": "PatternValue",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "patterns",
        "Required": true,
        "Description": "Pattern value"
      }
    ]
  },
  {
    "Name": "PostMalQueryFuzzySearchV1",
    "Path": "/malquery/combined/fuzzy-search/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "malquery:write",
    "Description": "Search MalQuery quickly, but with more potential for false positives.",
    "Parameters": [
      {
        "Dynamic": "Fuzzy",
        "Type": "switch",
        "Required": true,
        "Description": "Perform a fuzzy search"
      },
      {
        "Dynamic": "FilterMeta",
        "Name": "filter_meta",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "(sha256|md5|type|size|first_seen|label|family)",
        "Description": "Subset of metadata fields to include in the results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "PatternType",
        "Name": "type",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "patterns",
        "Required": true,
        "Enum": [
          "hex",
          "ascii",
          "wide"
        ],
        "Description": "Pattern type"
      },
      {
        "Dynamic": "PatternValue",
        "Name": "value",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "patterns",
        "Required": true,
        "Description": "Pattern value"
      }
    ]
  },
  {
    "Name": "PostMalQueryHuntV1",
    "Path": "/malquery/queries/hunt/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "malquery:write",
    "Description": "Schedule a YARA-based search for execution",
    "Parameters": [
      {
        "Dynamic": "Hunt",
        "Type": "switch",
        "Required": true,
        "Description": "Schedule a YARA-based search"
      },
      {
        "Dynamic": "FilterFileTypes",
        "Name": "filter_filetypes",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "(cdf|cdfv2|cjava|dalvik|doc|docx|elf32|elf64|email|html|hwp|java.arc|lnk|macho|pcap|pdf|pe32|pe64|perl|ppt|pptx|python|pythonc|rtf|swf|text|xls|xlsx)",
        "Description": "File types to include with the results"
      },
      {
        "Dynamic": "FilterMeta",
        "Name": "filter_meta",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "(sha256|md5|type|size|first_seen|label|family)",
        "Description": "Subset of metadata fields to include in the results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "MaxDate",
        "Name": "max_date",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "\\d{4}/\\d{2}/\\d{2}",
        "Description": "Limit results to files first seen after this date"
      },
      {
        "Dynamic": "MaxSize",
        "Name": "max_size",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Maximum file size, specified in bytes or multiples of KB/MB/GB"
      },
      {
        "Dynamic": "MinDate",
        "Name": "min_date",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Pattern": "\\d{4}/\\d{2}/\\d{2}",
        "Description": "Limit results to files first seen after this date"
      },
      {
        "Dynamic": "MinSize",
        "Name": "min_size",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "options",
        "Required": false,
        "Description": "Minimum file size, specified in bytes or multiples of KB/MB/GB"
      },
      {
        "Dynamic": "YaraRule",
        "Name": "yara_rule",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "A YARA rule that defines your search"
      }
    ]
  },
  {
    "Name": "ProcessesRanOn",
    "Path": "/indicators/queries/processes/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "Search for processes associated with a custom IOC",
    "Parameters": [
      {
        "Dynamic": "Processes",
        "Type": "switch",
        "Required": true,
        "Description": "Retrieve process identifiers for a host that has observed a custom IOC"
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      },
      {
        "Dynamic": "HostId",
        "Name": "device_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "Target Host identifier"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 100,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      }
    ]
  },
  {
    "Name": "ProvisionAWSAccounts",
    "Path": "/cloud-connect-aws/entities/accounts/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:write",
    "Description": "Provision AWS Accounts by specifying details about the accounts to provision",
    "Parameters": [
      {
        "Dynamic": "Mode",
        "Name": "mode",
        "Type": "string",
        "In": [
          "query"
        ],
        "Parent": "resources",
        "Required": false,
        "Default": "manual",
        "Enum": [
          "cloudformation",
          "manual"
        ],
        "Description": "Provisioning mode"
      },
      {
        "Dynamic": "CloudtrailId",
        "Name": "cloudtrail_bucket_owner_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The 12 digit AWS account which is hosting the S3 bucket containing cloudtrail logs for this account. If this field is set, it takes precedence of the settings level field."
      },
      {
        "Dynamic": "CloudtrailRegion",
        "Name": "cloudtrail_bucket_region",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Region where the S3 bucket containing cloudtrail logs resides."
      },
      {
        "Dynamic": "ExternalId",
        "Name": "external_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "ID assigned for use with cross account IAM role access."
      },
      {
        "Dynamic": "IamRoleArn",
        "Name": "iam_role_arn",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The full arn of the IAM role created in this account to control access."
      },
      {
        "Dynamic": "AccountId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "12 digit AWS provided unique identifier for the account."
      },
      {
        "Dynamic": "RateLimitReqs",
        "Name": "rate_limit_reqs",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Rate limiting setting to control the maximum number of requests that can be made within the rate_limit_time threshold."
      },
      {
        "Dynamic": "RateLimitTime",
        "Name": "rate_limit_time",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Rate limiting setting to control the number of seconds for which -RateLimitReqs applies."
      }
    ]
  },
  {
    "Name": "QueryAWSAccounts",
    "Path": "/cloud-connect-aws/combined/accounts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:read",
    "Description": "Search for provisioned AWS Accounts by providing an FQL filter and paging details. Returns a set of AWS accounts which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Default": "100",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "QueryAWSAccountsForIDs",
    "Path": "/cloud-connect-aws/queries/accounts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:read",
    "Description": "Search for provisioned AWS Accounts by providing an FQL filter and paging details. Returns a set of AWS account IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Default": "100",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "QueryBehaviors",
    "Path": "/incidents/queries/behaviors/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:read",
    "Description": "Search for behaviors by providing an FQL filter, sorting, and paging details",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "timestamp|asc",
          "timestamp|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedDeviceControlPolicies",
    "Path": "/policy/combined/device-control/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:read",
    "Description": "Search for Device Control Policies in your environment by providing an FQL filter and paging details. Returns a set of Device Control Policies which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedDeviceControlPolicyMembers",
    "Path": "/policy/combined/device-control-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:read",
    "Description": "Search for members of a Device Control Policy in your environment by providing an FQL filter and paging details. Returns a set of host details which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Device Control Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedFirewallPolicies",
    "Path": "/policy/combined/firewall/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Search for Firewall Policies in your environment by providing an FQL filter and paging details. Returns a set of Firewall Policies which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedFirewallPolicyMembers",
    "Path": "/policy/combined/firewall-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Search for members of a Firewall Policy in your environment by providing an FQL filter and paging details. Returns a set of host details which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Firewall Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedGroupMembers",
    "Path": "/devices/combined/host-group-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:read",
    "Description": "Search for members of a Host Group in your environment by providing an FQL filter and paging details. Returns a set of host details which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "GroupId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "Host group identifier"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedHostGroups",
    "Path": "/devices/combined/host-groups/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:read",
    "Description": "Search for Host Groups in your environment by providing an FQL filter and paging details. Returns a set of Host Groups which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "group_type|asc",
          "group_type|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedPreventionPolicies",
    "Path": "/policy/combined/prevention/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:read",
    "Description": "Search for Prevention Policies in your environment by providing an FQL filter and paging details. Returns a set of Prevention Policies which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedPreventionPolicyMembers",
    "Path": "/policy/combined/prevention-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:read",
    "Description": "Search for members of a Prevention Policy in your environment by providing an FQL filter and paging details. Returns a set of host details which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Prevention Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedSensorUpdateBuilds",
    "Path": "/policy/combined/sensor-update-builds/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Retrieve available builds for use with Sensor Update Policies",
    "Parameters": [
      {
        "Dynamic": "Platform",
        "Name": "platform",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "linux",
          "mac",
          "windows"
        ],
        "Description": "The platform to return builds for"
      }
    ]
  },
  {
    "Name": "queryCombinedSensorUpdatePolicies",
    "Path": "/policy/combined/sensor-update/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Search for Sensor Update Policies in your environment by providing an FQL filter and paging details. Returns a set of Sensor Update Policies which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedSensorUpdatePoliciesV2",
    "Path": "/policy/combined/sensor-update/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Search for Sensor Update Policies with additional support for uninstall protection in your environment by providing an FQL filter and paging details. Returns a set of Sensor Update Policies which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryCombinedSensorUpdatePolicyMembers",
    "Path": "/policy/combined/sensor-update-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Search for members of a Sensor Update Policy",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Pattern": "\\w{32}",
        "Required": false,
        "Description": "The ID of the Sensor Update Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QueryDetects",
    "Path": "/detects/queries/detects/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "detects:read",
    "Description": "Search for detection IDs that match a given query",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 9999,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results",
        "Enum": [
          "adversary.id|asc",
          "adversary.id|desc",
          "devices.hostname|asc",
          "devices.hostname|desc",
          "first_behavior|asc",
          "last_behavior|asc",
          "last_behavior|desc",
          "max_confidence|asc",
          "max_confidence|desc",
          "max_severity|asc",
          "max_severity|desc"
        ]
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Search all detection metadata for the provided string"
      }
    ]
  },
  {
    "Name": "queryDeviceControlPolicies",
    "Path": "/policy/queries/device-control/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:read",
    "Description": "Search for Device Control Policies in your environment by providing an FQL filter and paging details. Returns a set of Device Control Policy IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryDeviceControlPolicyMembers",
    "Path": "/policy/queries/device-control-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "device-control-policies:read",
    "Description": "Search for members of a Device Control Policy in your environment by providing an FQL filter and paging details. Returns a set of Agent IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Device Control Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QueryDevicesByFilterScroll",
    "Path": "/devices/queries/devices-scroll/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "devices:read",
    "Description": "Search for hosts",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "query-events",
    "Path": "/fwmgr/queries/events/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Find all event IDs matching the query with filter",
    "Parameters": [
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Match query criteria, which includes all the filter string fields, plus TODO"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "After",
        "Name": "after",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "A pagination token used with the `limit` parameter to manage pagination of results. On your first request, don't provide an `after` token. On subsequent requests, provide the `after` token from the previous response to continue from that place in the results."
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "query-firewall-fields",
    "Path": "/fwmgr/queries/firewall-fields/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get the firewall field specification IDs for the provided platform",
    "Parameters": [
      {
        "Dynamic": "PlatformId",
        "Name": "platform_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Get fields configuration for this platform"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "queryFirewallPolicies",
    "Path": "/policy/queries/firewall/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Search for Firewall Policies in your environment by providing an FQL filter and paging details. Returns a set of Firewall Policy IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryFirewallPolicyMembers",
    "Path": "/policy/queries/firewall-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Search for members of a Firewall Policy in your environment by providing an FQL filter and paging details. Returns a set of Agent IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Firewall Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryGroupMembers",
    "Path": "/devices/queries/host-group-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:read",
    "Description": "Search for members of a Host Group in your environment by providing an FQL filter and paging details. Returns a set of Agent IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "GroupId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "The ID of the Host Group to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QueryHiddenDevices",
    "Path": "/devices/queries/devices-hidden/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "devices:read",
    "Description": "Retrieve hidden hosts that match the provided filter criteria.",
    "Parameters": [
      {
        "Dynamic": "Hidden",
        "Type": "switch",
        "Required": true,
        "Description": "Search for hidden hosts"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "queryHostGroups",
    "Path": "/devices/queries/host-groups/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "host-group:read",
    "Description": "Search for Host Groups in your environment by providing an FQL filter and paging details. Returns a set of Host Group IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "group_type|asc",
          "group_type|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QueryIncidents",
    "Path": "/incidents/queries/incidents/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "incidents:read",
    "Description": "Search for incidents by providing an FQL filter, sorting, and paging details",
    "Parameters": [
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "assigned_to|asc",
          "assigned_to|desc",
          "assigned_to_name|asc",
          "assigned_to_name|desc",
          "end|asc",
          "end|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "sort_score|asc",
          "sort_score|desc",
          "start|asc",
          "start|desc",
          "state|asc",
          "state|desc",
          "status|asc",
          "status|desc"
        ],
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 500,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "QueryIntelActorEntities",
    "Path": "/intel/combined/actors/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-actors:read",
    "Description": "Get info about actors that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      },
      {
        "Dynamic": "Fields",
        "Name": "fields",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "__basic__",
        "Description": "The fields to return, or a predefined collection name surrounded by two underscores"
      }
    ]
  },
  {
    "Name": "QueryIntelActorIds",
    "Path": "/intel/queries/actors/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-actors:read",
    "Description": "Get actor IDs that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      }
    ]
  },
  {
    "Name": "QueryIntelIndicatorEntities",
    "Path": "/intel/combined/indicators/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-indicators:read",
    "Description": "Get info about indicators that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 50000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      },
      {
        "Dynamic": "IncludeDeleted",
        "Name": "include_deleted",
        "Type": "bool",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "False",
        "Description": "Include both published and deleted indicators"
      }
    ]
  },
  {
    "Name": "QueryIntelIndicatorIds",
    "Path": "/intel/queries/indicators/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-indicators:read",
    "Description": "Get indicators IDs that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 50000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      },
      {
        "Dynamic": "IncludeDeleted",
        "Name": "include_deleted",
        "Type": "bool",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "False",
        "Description": "Include both published and deleted indicators"
      }
    ]
  },
  {
    "Name": "QueryIntelReportEntities",
    "Path": "/intel/combined/reports/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-reports:read",
    "Description": "Get info about reports that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      },
      {
        "Dynamic": "Fields",
        "Name": "fields",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "__basic__",
        "Description": "The fields to return, or a predefined collection name surrounded by two underscores"
      }
    ]
  },
  {
    "Name": "QueryIntelReportIds",
    "Path": "/intel/queries/reports/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-reports:read",
    "Description": "Get report IDs that match provided FQL filters.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      }
    ]
  },
  {
    "Name": "QueryIntelRuleIds",
    "Path": "/intel/queries/rules/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-rules:read",
    "Description": "Search for rule IDs that match provided filter criteria.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "0",
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "10",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Search by rule title."
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "snort-suricata-master",
          "snort-suricata-update",
          "snort-suricata-changelog",
          "yara-master",
          "yara-update",
          "yara-changelog",
          "common-event-format",
          "netwitness"
        ],
        "Description": "The rule news report type. Accepted values:\n\nsnort-suricata-master\n\nsnort-suricata-update\n\nsnort-suricata-changelog\n\nyara-master\n\nyara-update\n\nyara-changelog\n\ncommon-event-format\n\nnetwitness"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Substring match on description field."
      },
      {
        "Dynamic": "Tags",
        "Name": "tags",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Search for rule tags."
      },
      {
        "Dynamic": "MinCreatedDate",
        "Name": "min_created_date",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Filter results to those created on or after a certain date."
      },
      {
        "Dynamic": "MaxCreatedDate",
        "Name": "max_created_date",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Filter results to those created on or before a certain date."
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Perform a generic substring search across all fields."
      }
    ]
  },
  {
    "Name": "QueryIOCs",
    "Path": "/indicators/queries/iocs/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:read",
    "Description": "Search the custom IOCs in your customer account",
    "Parameters": [
      {
        "Dynamic": "Type",
        "Name": "types",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Type of indicator"
      },
      {
        "Dynamic": "Value",
        "Name": "values",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 200,
        "Description": "The string representation of the indicator"
      },
      {
        "Dynamic": "FromExpirationTimestamp",
        "Name": "from.expiration_timestamp",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Find custom IOCs created after this time (RFC-3339 timestamp)"
      },
      {
        "Dynamic": "ToExpirationTimestamp",
        "Name": "to.expiration_timestamp",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Find custom IOCs created before this time (RFC-3339 timestamp)"
      },
      {
        "Dynamic": "Policy",
        "Name": "policies",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "detect",
          "none"
        ],
        "Description": "Custom IOC policy type ['detect', 'none']"
      },
      {
        "Dynamic": "Sources",
        "Name": "sources",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 200,
        "Description": "The source where this indicator originated. This can be used for tracking where this indicator was defined."
      },
      {
        "Dynamic": "ShareLevels",
        "Name": "share_levels",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "red"
        ],
        "Description": "The level at which the indicator will be shared. Currently only red share level (not shared) is supported, indicating that the IOC isn't shared with other FH customers."
      },
      {
        "Dynamic": "CreatedBy",
        "Name": "created_by",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The user or API client who created the Custom IOC"
      },
      {
        "Dynamic": "DeletedBy",
        "Name": "deleted_by",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The user or API client who deleted the Custom IOC"
      },
      {
        "Dynamic": "IncludeDeleted",
        "Name": "include_deleted",
        "Type": "bool",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "False",
        "Description": "Include deleted IOCs "
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      }
    ]
  },
  {
    "Name": "QueryMetadataV2",
    "Path": "/samples/queries/metadata/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "*/*"
    },
    "Permission": "samplestore:read",
    "Description": "Find samples metadata based on a given filter, currently allows only id/md5/sha1/pehash filtering.",
    "Parameters": [
      {
        "Dynamic": "XCSUSERUUID",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Description": "User UUID"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "query-platforms",
    "Path": "/fwmgr/queries/platforms/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Get the list of platform names",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "query-policy-rules",
    "Path": "/fwmgr/queries/policy-rules/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Find all firewall rule IDs matching the query with filter, and return them in precedence order",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "The ID of the policy container within which to query"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Match query criteria, which includes all the filter string fields, plus TODO"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "queryPreventionPolicies",
    "Path": "/policy/queries/prevention/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:read",
    "Description": "Search for Prevention Policies in your environment by providing an FQL filter and paging details. Returns a set of Prevention Policy IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "queryPreventionPolicyMembers",
    "Path": "/policy/queries/prevention-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "prevention-policies:read",
    "Description": "Search for members of a Prevention Policy in your environment by providing an FQL filter and paging details. Returns a set of Agent IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Prevention Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QueryReports",
    "Path": "/falconx/queries/reports/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Find sandbox reports by providing an FQL filter and paging details. Returns a set of report IDs that match your criteria.",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "query-rule-groups",
    "Path": "/fwmgr/queries/rule-groups/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Find all rule group IDs matching the query with filter",
    "Parameters": [
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Match query criteria, which includes all the filter string fields, plus TODO"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "After",
        "Name": "after",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "A pagination token used with the `limit` parameter to manage pagination of results. On your first request, don't provide an `after` token. On subsequent requests, provide the `after` token from the previous response to continue from that place in the results."
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "query-rules",
    "Path": "/fwmgr/queries/rules/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "firewall-management:read",
    "Description": "Find all rule IDs matching the query with filter",
    "Parameters": [
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Query",
        "Name": "q",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Match query criteria, which includes all the filter string fields, plus TODO"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "After",
        "Name": "after",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "A pagination token used with the `limit` parameter to manage pagination of results. On your first request, don't provide an `after` token. On subsequent requests, provide the `after` token from the previous response to continue from that place in the results."
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "QuerySampleV1",
    "Path": "/samples/queries/samples/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "falconx-sandbox:write",
    "Description": "Retrieve information about sandbox submission files",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "Sha256s",
        "Name": "sha256s",
        "Type": "array",
        "In": [
          "body"
        ],
        "Max": 500,
        "Required": false
      }
    ]
  },
  {
    "Name": "querySensorUpdatePolicies",
    "Path": "/policy/queries/sensor-update/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Search for Sensor Update Policies in your environment by providing an FQL filter and paging details. Returns a set of Sensor Update Policy IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Enum": [
          "created_by|asc",
          "created_by|desc",
          "created_timestamp|asc",
          "created_timestamp|desc",
          "enabled|asc",
          "enabled|desc",
          "modified_by|asc",
          "modified_by|desc",
          "modified_timestamp|asc",
          "modified_timestamp|desc",
          "name|asc",
          "name|desc",
          "platform_name|asc",
          "platform_name|desc",
          "precedence|asc",
          "precedence|desc"
        ],
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "querySensorUpdatePolicyMembers",
    "Path": "/policy/queries/sensor-update-members/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "sensor-update-policies:read",
    "Description": "Search for members of a Sensor Update Policy in your environment by providing an FQL filter and paging details. Returns a set of Agent IDs which match the filter criteria",
    "Parameters": [
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The ID of the Sensor Update Policy to search for members of"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QuerySubmissions",
    "Path": "/falconx/queries/submissions/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "falconx-sandbox:read",
    "Description": "Find submission IDs for uploaded files by providing an FQL filter and paging details. Returns a set of submission IDs that match your criteria.",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 5000,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "QuerySubmissionV2",
    "Path": "/samples/queries/submissions/v2",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "samplestore:read",
    "Description": "Finds submissions based on a given filter, currently allows only sha256/cid filtering.",
    "Parameters": [
      {
        "Dynamic": "XCSUSERUUID",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Description": "User UUID"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "200",
        "Description": "Maximum number of results"
      }
    ]
  },
  {
    "Name": "queryVulnerabilities",
    "Path": "/spotlight/queries/vulnerabilities/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "spotlight-vulnerabilities:read",
    "Description": "Search for vulnerability identifiers",
    "Parameters": [
      {
        "Dynamic": "After",
        "Name": "after",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "A pagination token used with the `limit` parameter to manage pagination of results. On your first request, don't provide an `after` token. On subsequent requests, provide the `after` token from the previous response to continue from that place in the results."
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 400,
        "Default": "100",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results",
        "Enum": [
          "closed_timestamp|asc",
          "closed_timestamp|desc",
          "created_timestamp|asc",
          "created_timestamp|desc"
        ]
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "refreshActiveStreamSession",
    "Path": "/sensors/entities/datafeed-actions/v1/<partition>",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "streaming:read",
    "Description": "Refresh an active event stream. Use the URL shown in a GET /sensors/entities/datafeed/v2 response.",
    "Parameters": [
      {
        "Dynamic": "ActionName",
        "Name": "action_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Enum": [
          "refresh_active_stream_session"
        ],
        "Description": "Action name. Allowed value is refresh_active_stream_session."
      },
      {
        "Dynamic": "AppId",
        "Name": "appId",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 32,
        "Description": "Label that identifies your connection. Max: 32 alphanumeric characters (a-z, A-Z, 0-9)."
      },
      {
        "Dynamic": "Partition",
        "Name": "<partition>",
        "Type": "int",
        "In": [
          "path"
        ],
        "Required": true,
        "Description": "Partition to request data for."
      }
    ]
  },
  {
    "Name": "RetrieveEmailsByCID",
    "Path": "/users/queries/emails-by-cid/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "List all usernames (typically an email address)"
  },
  {
    "Name": "RetrieveUser",
    "Path": "/users/entities/users/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "Get detailed information about a user",
    "Parameters": [
      {
        "Dynamic": "UserIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "One or more user identifiers"
      }
    ]
  },
  {
    "Name": "RetrieveUserUUID",
    "Path": "/users/queries/user-uuids-by-email/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "Retrieve a user identifier by providing a username (typically an email address)",
    "Parameters": [
      {
        "Dynamic": "Username",
        "Name": "uid",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Email address or username"
      }
    ]
  },
  {
    "Name": "RetrieveUserUUIDsByCID",
    "Path": "/users/queries/user-uuids-by-cid/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:read",
    "Description": "List all user identifiers",
    "Parameters": [
      {
        "Dynamic": "Names",
        "Type": "switch",
        "Required": false,
        "Description": "Retrieve usernames (typically email addresses) rather than user identifiers"
      }
    ]
  },
  {
    "Name": "revealUninstallToken",
    "Path": "/policy/combined/reveal-uninstall-token/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Reveal an uninstall token for a specific device, or use 'MAINTENANCE' to reveal the bulk token",
    "Parameters": [
      {
        "Dynamic": "AuditMessage",
        "Name": "audit_message",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "A comment to append to the audit log"
      },
      {
        "Dynamic": "HostId",
        "Name": "device_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "Host identifier"
      }
    ]
  },
  {
    "Name": "RevokeUserRoleIds",
    "Path": "/user-roles/entities/user-roles/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:write",
    "Description": "Revoke one or more roles from a user",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "user_uuid",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "RoleIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more roles"
      }
    ]
  },
  {
    "Name": "RTR-CheckActiveResponderCommandStatus",
    "Path": "/real-time-response/entities/active-responder-command/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Check the status of an Active Responder Real-time Response command",
    "Parameters": [
      {
        "Dynamic": "CloudRequestId",
        "Name": "cloud_request_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Cloud request identifier of the executed command"
      },
      {
        "Dynamic": "SequenceId",
        "Name": "sequence_id",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Sequence identifier [default: 0]"
      }
    ]
  },
  {
    "Name": "RTR-CheckAdminCommandStatus",
    "Path": "/real-time-response/entities/admin-command/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Get status of an executed RTR administrator command on a single host.",
    "Parameters": [
      {
        "Dynamic": "CloudRequestId",
        "Name": "cloud_request_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Cloud request identifier of the executed command"
      },
      {
        "Dynamic": "SequenceId",
        "Name": "sequence_id",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Sequence identifier [default: 0]"
      }
    ]
  },
  {
    "Name": "RTR-CheckCommandStatus",
    "Path": "/real-time-response/entities/command/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Get status of an executed command on a single host.",
    "Parameters": [
      {
        "Dynamic": "CloudRequestId",
        "Name": "cloud_request_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Cloud request identifier of the executed command"
      },
      {
        "Dynamic": "SequenceId",
        "Name": "sequence_id",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Sequence identifier [default: 0]"
      }
    ]
  },
  {
    "Name": "RTR-CreatePut-Files",
    "Path": "/real-time-response/entities/put-files/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "multipart/form-data"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Upload a new put-file to use for the RTR `put` command.",
    "Parameters": [
      {
        "Dynamic": "Path",
        "Name": "file",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Description": "File to upload"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Description": "A description of the file"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "Optional name to use for the script"
      },
      {
        "Dynamic": "Comment",
        "Name": "comments_for_audit_log",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Max": 4096,
        "Description": "A comment for the audit log"
      }
    ]
  },
  {
    "Name": "RTR-CreateScripts",
    "Path": "/real-time-response/entities/scripts/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "multipart/form-data"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Upload a new custom-script to use for the RTR `runscript` command.",
    "Parameters": [
      {
        "Dynamic": "Path",
        "Name": "file",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Description": "Script to upload"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Description": "A description of the script"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "Optional name to use for the script"
      },
      {
        "Dynamic": "Comment",
        "Name": "comments_for_audit_log",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Max": 4096,
        "Description": "A comment for the audit log"
      },
      {
        "Dynamic": "PermissionType",
        "Name": "permission_type",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Default": "none",
        "Enum": [
          "private",
          "group",
          "public"
        ],
        "Description": "Permission level [private: uploader only, group: admins, public: admins and active responders]"
      },
      {
        "Dynamic": "Platform",
        "Name": "platform",
        "Type": "array",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Default": "windows",
        "Enum": [
          "windows",
          "mac"
        ],
        "Description": "Operating system platform [default: windows]"
      }
    ]
  },
  {
    "Name": "RTR-DeleteFile",
    "Path": "/real-time-response/entities/file/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Delete a RTR session file.",
    "Parameters": [
      {
        "Dynamic": "FileId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "File identifier"
      },
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Real-time Response session identifier",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      }
    ]
  },
  {
    "Name": "RTR-DeletePut-Files",
    "Path": "/real-time-response/entities/put-files/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Delete a put-file based on the ID given.  Can only delete one file at a time.",
    "Parameters": [
      {
        "Dynamic": "FileId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "File identifier"
      }
    ]
  },
  {
    "Name": "RTR-DeleteQueuedSession",
    "Path": "/real-time-response/entities/queued-sessions/command/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Delete a queued session command",
    "Parameters": [
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Real-time Response session identifier",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      },
      {
        "Dynamic": "CloudRequestId",
        "Name": "cloud_request_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Cloud request identifier of the executed command"
      }
    ]
  },
  {
    "Name": "RTR-DeleteScripts",
    "Path": "/real-time-response/entities/scripts/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Delete a custom-script based on the ID given.  Can only delete one script at a time.",
    "Parameters": [
      {
        "Dynamic": "FileId",
        "Name": "ids",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Script identifier"
      }
    ]
  },
  {
    "Name": "RTR-DeleteSession",
    "Path": "/real-time-response/entities/sessions/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Delete a session.",
    "Parameters": [
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Real-time Response session identifier",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      }
    ]
  },
  {
    "Name": "RTR-ExecuteActiveResponderCommand",
    "Path": "/real-time-response/entities/active-responder-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Issue a Real-time Response command to a session using Active Responder permissions",
    "Parameters": [
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "cp",
          "csrutil",
          "encrypt",
          "env",
          "eventlog",
          "filehash",
          "get",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "kill",
          "ls",
          "map",
          "memdump",
          "mkdir",
          "mount",
          "mv",
          "netstat",
          "ps",
          "reg query",
          "reg set",
          "reg delete",
          "reg load",
          "reg unload",
          "restart",
          "rm",
          "runscript",
          "shutdown",
          "umount",
          "unmap",
          "users",
          "xmemdump",
          "zip"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response session identifier"
      }
    ]
  },
  {
    "Name": "RTR-ExecuteAdminCommand",
    "Path": "/real-time-response/entities/admin-command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Issue a Real-time Response command to a session using Admin permissions",
    "Parameters": [
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "cp",
          "csrutil",
          "encrypt",
          "env",
          "eventlog",
          "filehash",
          "get",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "kill",
          "ls",
          "map",
          "memdump",
          "mkdir",
          "mount",
          "mv",
          "netstat",
          "ps",
          "put",
          "reg query",
          "reg set",
          "reg delete",
          "reg load",
          "reg unload",
          "restart",
          "rm",
          "run",
          "runscript",
          "shutdown",
          "umount",
          "unmap",
          "users",
          "xmemdump",
          "zip"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response session identifier"
      }
    ]
  },
  {
    "Name": "RTR-ExecuteCommand",
    "Path": "/real-time-response/entities/command/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Issue a Real-time Response command to a session",
    "Parameters": [
      {
        "Dynamic": "Command",
        "Name": "base_command",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "cat",
          "cd",
          "clear",
          "csrutil",
          "env",
          "eventlog",
          "filehash",
          "getsid",
          "help",
          "history",
          "ifconfig",
          "ipconfig",
          "ls",
          "mount",
          "netstat",
          "ps",
          "reg query",
          "users"
        ],
        "Description": "Command to issue"
      },
      {
        "Dynamic": "Arguments",
        "Name": "command_string",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Arguments to include with the command"
      },
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "Real-time Response session identifier"
      }
    ]
  },
  {
    "Name": "RTR-GetExtractedFileContents",
    "Path": "/real-time-response/entities/extracted-file-contents/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/x-7z-compressed"
    },
    "Permission": "real-time-response:write",
    "Description": "Download a file extracted through a Real-time Response 'get' request",
    "Parameters": [
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Real-time Response session identifier",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      },
      {
        "Dynamic": "Sha256",
        "Name": "sha256",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Min": 64,
        "Max": 64,
        "Description": "SHA256 value of the extracted file"
      },
      {
        "Dynamic": "Path",
        "Name": "",
        "Type": "string",
        "In": [
          "outfile"
        ],
        "Required": true,
        "Pattern": "\\.7z$",
        "Description": "Full destination path for .7z file"
      }
    ]
  },
  {
    "Name": "RTR-GetPut-Files",
    "Path": "/real-time-response/entities/put-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Get put-files based on the ID's given. These are used for the RTR `put` command.",
    "Parameters": [
      {
        "Dynamic": "FileIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more file identifiers"
      }
    ]
  },
  {
    "Name": "RTR-GetScripts",
    "Path": "/real-time-response/entities/scripts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Get custom-scripts based on the ID's given. These are used for the RTR `runscript` command.",
    "Parameters": [
      {
        "Dynamic": "ScriptIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "One or more script identifiers"
      }
    ]
  },
  {
    "Name": "RTR-InitSession",
    "Path": "/real-time-response/entities/sessions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Initialize a Real-time Response session",
    "Parameters": [
      {
        "Dynamic": "HostId",
        "Name": "device_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "Host identifier"
      },
      {
        "Dynamic": "Origin",
        "Name": "origin",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Optional comment about the creation of the session"
      },
      {
        "Dynamic": "QueueOffline",
        "Name": "queue_offline",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Add session to the offline queue if the host does not initialize"
      }
    ]
  },
  {
    "Name": "RTR-ListAllSessions",
    "Path": "/real-time-response/queries/sessions/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Get a list of session_ids.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "RTR-ListFiles",
    "Path": "/real-time-response/entities/file/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response:write",
    "Description": "Get a list of files for the specified RTR session.",
    "Parameters": [
      {
        "Dynamic": "SessionId",
        "Name": "session_id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Description": "Real-time Response session identifier",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      }
    ]
  },
  {
    "Name": "RTR-ListPut-Files",
    "Path": "/real-time-response/queries/put-files/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Get a list of put-file ID's that are available to the user for the `put` command.",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "RTR-ListQueuedSessions",
    "Path": "/real-time-response/entities/queued-sessions/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Get queued session metadata by session ID",
    "Parameters": [
      {
        "Dynamic": "SessionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "One or more session identifiers"
      },
      {
        "Dynamic": "Queue",
        "Type": "switch",
        "Required": true,
        "Description": "Lists information about sessions in the offline queue"
      }
    ]
  },
  {
    "Name": "RTR-ListScripts",
    "Path": "/real-time-response/queries/scripts/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Get a list of custom-script ID's that are available to the user for the `runscript` command.",
    "Parameters": [
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      },
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "The position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      }
    ]
  },
  {
    "Name": "RTR-ListSessions",
    "Path": "/real-time-response/entities/sessions/GET/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Get session metadata by session id.",
    "Parameters": [
      {
        "Dynamic": "SessionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "One or more session identifiers"
      }
    ]
  },
  {
    "Name": "RTR-PulseSession",
    "Path": "/real-time-response/entities/refresh-session/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "real-time-response:read",
    "Description": "Refresh a session timeout on a single host.",
    "Parameters": [
      {
        "Dynamic": "HostId",
        "Name": "device_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Min": 32,
        "Max": 32,
        "Pattern": "\\w{32}",
        "Description": "Host identifier"
      },
      {
        "Dynamic": "QueueOffline",
        "Name": "queue_offline",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Add session to the offline queue"
      }
    ]
  },
  {
    "Name": "RTR-UpdateScripts",
    "Path": "/real-time-response/entities/scripts/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "multipart/form-data"
    },
    "Permission": "real-time-response-admin:write",
    "Description": "Upload a new script to replace an existing one",
    "Parameters": [
      {
        "Dynamic": "ScriptId",
        "Name": "id",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": true,
        "Description": "The identifier of the script to update"
      },
      {
        "Dynamic": "Path",
        "Name": "file",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "Script to upload"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "A description of the script"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "Optional name to use for the script"
      },
      {
        "Dynamic": "Comment",
        "Name": "comments_for_audit_log",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Max": 4096,
        "Description": "A comment for the audit log"
      },
      {
        "Dynamic": "PermissionType",
        "Name": "permission_type",
        "Type": "string",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Default": "none",
        "Description": "Permission level [private: uploader only, group: admins, public: admins and active responders]"
      },
      {
        "Dynamic": "Platform",
        "Name": "platform",
        "Type": "array",
        "In": [
          "formdata"
        ],
        "Required": false,
        "Description": "Operating system platform [default: windows]"
      }
    ]
  },
  {
    "Name": "setDeviceControlPoliciesPrecedence",
    "Path": "/policy/entities/device-control-precedence/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "device-control-policies:write",
    "Description": "Sets the precedence of Device Control Policies based on the order of IDs specified in the request. The first ID specified will have the highest precedence and the last ID specified will have the lowest. You must specify all non-Default Policies for a platform when updating precedence",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "All of the policy identifiers for the specified platform"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      }
    ]
  },
  {
    "Name": "setFirewallPoliciesPrecedence",
    "Path": "/policy/entities/firewall-precedence/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Sets the precedence of Firewall Policies based on the order of IDs specified in the request. The first ID specified will have the highest precedence and the last ID specified will have the lowest. You must specify all non-Default Policies for a platform when updating precedence",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "All of the policy identifiers for the specified platform"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      }
    ]
  },
  {
    "Name": "setPreventionPoliciesPrecedence",
    "Path": "/policy/entities/prevention-precedence/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "prevention-policies:write",
    "Description": "Sets the precedence of Prevention Policies based on the order of IDs specified in the request. The first ID specified will have the highest precedence and the last ID specified will have the lowest. You must specify all non-Default Policies for a platform when updating precedence",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "All of the policy identifiers for the specified platform"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      }
    ]
  },
  {
    "Name": "setSensorUpdatePoliciesPrecedence",
    "Path": "/policy/entities/sensor-update-precedence/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Sets the precedence of Sensor Update Policies based on the order of IDs specified in the request. The first ID specified will have the highest precedence and the last ID specified will have the lowest. You must specify all non-Default Policies for a platform when updating precedence",
    "Parameters": [
      {
        "Dynamic": "PolicyIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "All of the policy identifiers for the specified platform"
      },
      {
        "Dynamic": "PlatformName",
        "Name": "platform_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true,
        "Enum": [
          "Windows",
          "Mac",
          "Linux"
        ],
        "Description": "Platform name"
      }
    ]
  },
  {
    "Name": "SharedParameters",
    "Parameters": [
      {
        "Dynamic": "All",
        "Type": "switch",
        "Required": false,
        "Description": "Repeat requests until all available results are retrieved",
        "ParameterSets": [
          "queryDeviceControlPolicies",
          "queryCombinedDeviceControlPolicies",
          "queryDeviceControlPolicyMembers",
          "queryCombinedDeviceControlPolicyMembers",
          "QueryAWSAccountsforIDs",
          "QueryAWSAccounts",
          "QueryDetects",
          "QueryReports",
          "QuerySubmissions",
          "query-events",
          "query-firewall-fields",
          "query-rule-groups",
          "query-rules",
          "queryFirewallPolicies",
          "queryCombinedFirewallPolicies",
          "queryFirewallPolicyMembers",
          "queryCombinedFirewallPolicyMembers",
          "queryHostGroups",
          "queryGroupMembers",
          "queryCombinedGroupMembers",
          "queryCombinedHostGroups",
          "QueryDevicesByFilterScroll",
          "QueryHiddenDevices",
          "QueryBehaviors",
          "QueryIncidents",
          "CrowdScore",
          "tokens-query",
          "audit-events-query",
          "QueryIntelActorIds",
          "QueryIntelActorEntities",
          "QueryIntelIndicatorIds",
          "QueryIntelIndicatorEntities",
          "QueryIntelReportIds",
          "QueryIntelReportEntities",
          "GetIntelRuleEntities",
          "ProcessesRanOn",
          "DevicesRanOn",
          "QueryIOCs",
          "queryPreventionPolicies",
          "queryCombinedPreventionPolicies",
          "queryPreventionPolicyMembers",
          "queryCombinedPreventionPolicyMembers",
          "querySensorUpdatePolicies",
          "queryCombinedSensorUpdatePoliciesV2",
          "querySensorUpdatePolicyMembers",
          "queryCombinedSensorUpdatePolicyMembers",
          "queryVulnerabilities",
          "GetSensorInstallersByQuery",
          "GetCombinedSensorInstallersByQuery",
          "RTR-CheckCommandStatus",
          "BatchGetCmdStatus",
          "RTR-ListFiles",
          "RTR-CheckActiveResponderCommandStatus",
          "RTR-ListAllSessions",
          "RTR-ListQueuedSessions",
          "RTR-CheckAdminCommandStatus",
          "RTR-ListPut-Files",
          "RTR-ListScripts"
        ]
      },
      {
        "Dynamic": "Detailed",
        "Type": "switch",
        "Required": false,
        "Description": "Retrieve detailed information",
        "ParameterSets": [
          "queryDeviceControlPolicies",
          "queryDeviceControlPolicyMembers",
          "QueryAWSAccountsforIDs",
          "QueryDetects",
          "QueryReports",
          "QuerySubmissions",
          "query-events",
          "query-firewall-fields",
          "query-rule-groups",
          "query-platforms",
          "query-rules",
          "query-policy-rules",
          "queryFirewallPolicies",
          "queryFirewallPolicyMembers",
          "queryHostGroups",
          "queryGroupMembers",
          "QueryDevicesByFilterScroll",
          "QueryHiddenDevices",
          "QueryBehaviors",
          "QueryIncidents",
          "tokens-query",
          "audit-events-query",
          "QueryIntelActorIds",
          "QueryIntelIndicatorIds",
          "QueryIntelReportIds",
          "QueryIntelRuleIds",
          "queryPreventionPolicies",
          "queryPreventionPolicyMembers",
          "querySensorUpdatePolicies",
          "querySensorUpdatePolicyMembers",
          "queryVulnerabilities",
          "GetAvailableRoleIds",
          "RetrieveUserUUIDsByCID",
          "GetSensorInstallersByQuery",
          "RTR-ListAllSessions",
          "RTR-ListPut-Files",
          "RTR-ListScripts"
        ]
      },
      {
        "Dynamic": "Members",
        "Type": "switch",
        "Required": true,
        "Description": "List assigned host members",
        "ParameterSets": [
          "queryDeviceControlPolicyMembers",
          "queryCombinedDeviceControlPolicyMembers",
          "queryFirewallPolicyMembers",
          "queryCombinedFirewallPolicyMembers",
          "queryGroupMembers",
          "queryCombinedGroupMembers",
          "queryPreventionPolicyMembers",
          "queryCombinedPreventionPolicyMembers",
          "querySensorUpdatePolicyMembers",
          "queryCombinedSensorUpdatePolicyMembers"
        ]
      },
      {
        "Dynamic": "Array",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Description": "An array containing multiple objects to submit in a single request",
        "ParameterSets": [
          "Array"
        ]
      }
    ]
  },
  {
    "Name": "ShowMap",
    "Path": "/intelligence/graph?indicators=",
    "Method": "POST",
    "Description": "Graph Indicators",
    "Parameters": [
      {
        "Dynamic": "Indicators",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "(sha256|md5|domain|ipv4|ipv6):.*",
        "Description": "Indicators to graph"
      }
    ]
  },
  {
    "Name": "Submit",
    "Path": "/falconx/entities/submissions/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "falconx-sandbox:write",
    "Description": "Submit an uploaded file or a URL for sandbox analysis. Time required for analysis varies but is usually less than 15 minutes.",
    "Parameters": [
      {
        "Dynamic": "ActionScript",
        "Name": "action_script",
        "Type": "string",
        "In": [
          "body"
        ],
        "Enum": [
          "default",
          "default_maxantievasion",
          "default_randomfiles",
          "default_randomtheme",
          "default_openie"
        ],
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "CommandLine",
        "Name": "command_line",
        "Type": "string",
        "In": [
          "body"
        ],
        "Min": 1,
        "Max": 2048,
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "DocumentPassword",
        "Name": "document_password",
        "Type": "string",
        "In": [
          "body"
        ],
        "Min": 1,
        "Max": 32,
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "EnableTor",
        "Name": "enable_tor",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "EnvironmentId",
        "Name": "environment_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Enum": [
          "Android",
          "Ubuntu16_x64",
          "Win7_x64",
          "Win7_x86",
          "Win10_x64"
        ],
        "Parent": "sandbox",
        "Required": true
      },
      {
        "Dynamic": "Sha256",
        "Name": "sha256",
        "Type": "string",
        "In": [
          "body"
        ],
        "Min": 64,
        "Max": 64,
        "Pattern": "\\w{64}",
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "SubmitName",
        "Name": "submit_name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "SystemDate",
        "Name": "system_date",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "sandbox",
        "Pattern": "\\d{4}-\\d{2}-\\d{2}",
        "Required": false
      },
      {
        "Dynamic": "SystemTime",
        "Name": "system_time",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "sandbox",
        "Pattern": "\\d{2}:\\d{2}",
        "Required": false
      },
      {
        "Dynamic": "Url",
        "Name": "url",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "sandbox",
        "Required": false
      },
      {
        "Dynamic": "UserTags",
        "Name": "user_tags",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false
      }
    ]
  },
  {
    "Name": "tokens-create",
    "Path": "/installation-tokens/entities/tokens/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:write",
    "Description": "Creates a token.",
    "Parameters": [
      {
        "Dynamic": "ExpiresTimestamp",
        "Name": "expires_timestamp",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "The token's expiration time (RFC-3339). Null, if the token never expires."
      },
      {
        "Dynamic": "Label",
        "Name": "label",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "The token label."
      }
    ]
  },
  {
    "Name": "tokens-delete",
    "Path": "/installation-tokens/entities/tokens/v1",
    "Method": "DELETE",
    "Headers": {
      "Accept": "application/json"
    },
    "Permission": "installation-tokens:write",
    "Description": "Deletes a token immediately. To revoke a token, use PATCH /installation-tokens/entities/tokens/v1 instead.",
    "Parameters": [
      {
        "Dynamic": "TokenIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more token identifiers"
      }
    ]
  },
  {
    "Name": "tokens-query",
    "Path": "/installation-tokens/queries/tokens/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:read",
    "Description": "Search for tokens by providing an FQL filter and paging details.",
    "Parameters": [
      {
        "Dynamic": "Offset",
        "Name": "offset",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Position to begin retrieving results"
      },
      {
        "Dynamic": "Limit",
        "Name": "limit",
        "Type": "int",
        "In": [
          "query"
        ],
        "Required": false,
        "Min": 1,
        "Max": 1000,
        "Default": "50",
        "Description": "Maximum number of results"
      },
      {
        "Dynamic": "Sort",
        "Name": "sort",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Property and direction to sort results"
      },
      {
        "Dynamic": "Filter",
        "Name": "filter",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "An FQL filter expression"
      }
    ]
  },
  {
    "Name": "tokens-read",
    "Path": "/installation-tokens/entities/tokens/v1",
    "Method": "GET",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:read",
    "Description": "Gets the details of one or more tokens by id.",
    "Parameters": [
      {
        "Dynamic": "TokenIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": false,
        "Pattern": "\\w{32}",
        "Description": "One or more token identifiers"
      }
    ]
  },
  {
    "Name": "tokens-update",
    "Path": "/installation-tokens/entities/tokens/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "installation-tokens:write",
    "Description": "Updates one or more tokens. Use this endpoint to edit labels, change expiration, revoke, or restore.",
    "Parameters": [
      {
        "Dynamic": "TokenIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "One or more token identifiers"
      },
      {
        "Dynamic": "ExpiresTimestamp",
        "Name": "expires_timestamp",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "The token's expiration time (RFC-3339). Null, if the token never expires."
      },
      {
        "Dynamic": "Label",
        "Name": "label",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "The token label."
      },
      {
        "Dynamic": "Revoked",
        "Name": "revoked",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Set to true to revoke the token, false to un-revoked it."
      }
    ]
  },
  {
    "Name": "UpdateAWSAccounts",
    "Path": "/cloud-connect-aws/entities/accounts/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:write",
    "Description": "Update AWS Accounts by specifying the ID of the account and details to update",
    "Parameters": [
      {
        "Dynamic": "CloudtrailId",
        "Name": "cloudtrail_bucket_owner_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The 12 digit AWS account which is hosting the S3 bucket containing cloudtrail logs for this account. If this field is set, it takes precedence of the settings level field."
      },
      {
        "Dynamic": "CloudtrailRegion",
        "Name": "cloudtrail_bucket_region",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Region where the S3 bucket containing cloudtrail logs resides."
      },
      {
        "Dynamic": "ExternalId",
        "Name": "external_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "ID assigned for use with cross account IAM role access."
      },
      {
        "Dynamic": "IamRoleArn",
        "Name": "iam_role_arn",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The full arn of the IAM role created in this account to control access."
      },
      {
        "Dynamic": "AccountId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "12 digit AWS provided unique identifier for the account."
      },
      {
        "Dynamic": "RateLimitReqs",
        "Name": "rate_limit_reqs",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Rate limiting setting to control the maximum number of requests that can be made within the rate_limit_time threshold."
      },
      {
        "Dynamic": "RateLimitTime",
        "Name": "rate_limit_time",
        "Type": "int",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "Rate limiting setting to control the number of seconds for which -RateLimitReqs applies."
      }
    ]
  },
  {
    "Name": "UpdateCSPMAzureAccountClientID",
    "Path": "/cloud-connect-azure/entities/client-id/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "d4c-registration:write",
    "Description": "Update an Azure service account",
    "Parameters": [
      {
        "Dynamic": "ClientId",
        "Name": "id",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "^[0-9a-z-]{36}$",
        "Description": "Client identifier to use for the Service Principal associated with the Azure account"
      }
    ]
  },
  {
    "Name": "UpdateDetectsByIdsV2",
    "Path": "/detects/entities/detects/v2",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "detects:write",
    "Description": "Modify the state, assignee, and visibility of detections",
    "Parameters": [
      {
        "Dynamic": "AssignedUuid",
        "Name": "assigned_to_uuid",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "A user identifier to use to assign the detection",
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
      },
      {
        "Dynamic": "Comment",
        "Name": "comment",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "A comment to add to the detection"
      },
      {
        "Dynamic": "DetectionIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true,
        "Pattern": "ldt:\\w{32}:\\w+",
        "Max": 1000,
        "Description": "One or more detection identifiers"
      },
      {
        "Dynamic": "ShowInUi",
        "Name": "show_in_ui",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Display the detection in the Falcon UI"
      },
      {
        "Dynamic": "Status",
        "Name": "status",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Enum": [
          "new",
          "in_progress",
          "true_positive",
          "false_positive",
          "ignored"
        ],
        "Description": "Detection status"
      }
    ]
  },
  {
    "Name": "updateDeviceControlPolicies",
    "Path": "/policy/entities/device-control/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "device-control-policies:write",
    "Description": "Update Device Control Policies by specifying the ID of the policy and details to update",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new description to assign to the policy"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "The id of the policy to update"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new name to assign to the policy"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "hashtable",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "A hashtable defining policy settings"
      }
    ]
  },
  {
    "Name": "updateFirewallPolicies",
    "Path": "/policy/entities/firewall/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Update Firewall Policies by specifying the ID of the policy and details to update",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new description to assign to the policy"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "The id of the policy to update"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new name to assign to the policy"
      }
    ]
  },
  {
    "Name": "updateHostGroups",
    "Path": "/devices/entities/host-groups/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "host-group:write",
    "Description": "Update Host Groups by specifying the ID of the group and details to update",
    "Parameters": [
      {
        "Dynamic": "AssignmentRule",
        "Name": "assignment_rule",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new assignment rule of the group. Note: If the group type is static, this field cannot be updated manually"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new description of the group"
      },
      {
        "Dynamic": "GroupId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Pattern": "\\w{32}",
        "Description": "The id of the group to update"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new name of the group"
      }
    ]
  },
  {
    "Name": "UpdateIOC",
    "Path": "/indicators/entities/iocs/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "iocs:write",
    "Description": "Update a custom IOC",
    "Parameters": [
      {
        "Dynamic": "ExpirationDays",
        "Name": "expiration_days",
        "Type": "int",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Number of days before expiration (for 'domain', 'ipv4', and 'ipv6')"
      },
      {
        "Dynamic": "Policy",
        "Name": "policy",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Enum": [
          "detect",
          "none"
        ],
        "Description": "Action to take when a host observes the custom IOC"
      },
      {
        "Dynamic": "ShareLevel",
        "Name": "share_level",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Enum": [
          "red"
        ],
        "Description": "Custom IOC visibility level ['red']"
      },
      {
        "Dynamic": "Source",
        "Name": "source",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC source"
      },
      {
        "Dynamic": "Type",
        "Name": "type",
        "Type": "string",
        "In": [
          "body",
          "query"
        ],
        "Required": true,
        "Enum": [
          "sha256",
          "md5",
          "domain",
          "ipv4",
          "ipv6"
        ],
        "Description": "Custom IOC type"
      },
      {
        "Dynamic": "Value",
        "Name": "value",
        "Type": "string",
        "In": [
          "body",
          "query"
        ],
        "Required": true,
        "Min": 1,
        "Max": 200,
        "Description": "Custom IOC value"
      },
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "Custom IOC description"
      }
    ]
  },
  {
    "Name": "update-policy-container",
    "Path": "/fwmgr/entities/policies/v1",
    "Method": "PUT",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Update an identified policy container",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERNAME",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "DefaultInbound",
        "Name": "default_inbound",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "DefaultOutbound",
        "Name": "default_outbound",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "Enforce",
        "Name": "enforce",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "IsDefaultPolicy",
        "Name": "is_default_policy",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "PlatformId",
        "Name": "platform_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true
      },
      {
        "Dynamic": "PolicyId",
        "Name": "policy_id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": true
      },
      {
        "Dynamic": "RuleGroupIds",
        "Name": "rule_group_ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": true
      },
      {
        "Dynamic": "TestMode",
        "Name": "test_mode",
        "Type": "bool",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "Tracking",
        "Name": "tracking",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      }
    ]
  },
  {
    "Name": "updatePreventionPolicies",
    "Path": "/policy/entities/prevention/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "prevention-policies:write",
    "Description": "Update Prevention Policies by specifying the ID of the policy and details to update",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new description to assign to the policy"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": true,
        "Description": "The id of the policy to update"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new name to assign to the policy"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "array",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "An array of hashtables defining policy settings"
      }
    ]
  },
  {
    "Name": "update-rule-group",
    "Path": "/fwmgr/entities/rule-groups/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "firewall-management:write",
    "Description": "Update name, description, or enabled status of a rule group, or create, edit, delete, or reorder rules",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERNAME",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "Comment",
        "Name": "comment",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Audit log comment for this action"
      },
      {
        "Dynamic": "DiffOperations",
        "Name": "diff_operations",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "DiffType",
        "Name": "diff_type",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "GroupId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "RuleIds",
        "Name": "rule_ids",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "RuleVersions",
        "Name": "rule_versions",
        "Type": "array",
        "In": [
          "body"
        ],
        "Required": false
      },
      {
        "Dynamic": "Tracking",
        "Name": "tracking",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false
      }
    ]
  },
  {
    "Name": "updateSensorUpdatePoliciesV2",
    "Path": "/policy/entities/sensor-update/v2",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "sensor-update-policies:write",
    "Description": "Update Sensor Update Policies by specifying the ID of the policy and details to update",
    "Parameters": [
      {
        "Dynamic": "Description",
        "Name": "description",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new description to assign to the policy"
      },
      {
        "Dynamic": "PolicyId",
        "Name": "id",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Pattern": "\\w{32}",
        "Required": true,
        "Description": "Policy identifier"
      },
      {
        "Dynamic": "Name",
        "Name": "name",
        "Type": "string",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "The new name to assign to the policy"
      },
      {
        "Dynamic": "Settings",
        "Name": "settings",
        "Type": "hashtable",
        "In": [
          "body"
        ],
        "Parent": "resources",
        "Required": false,
        "Description": "A hashtable defining policy settings"
      }
    ]
  },
  {
    "Name": "UpdateUser",
    "Path": "/users/entities/users/v1",
    "Method": "PATCH",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "usermgmt:write",
    "Description": "Modify an existing user's first or last name",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "user_uuid",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "FirstName",
        "Name": "firstName",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "User's first name"
      },
      {
        "Dynamic": "LastName",
        "Name": "lastName",
        "Type": "string",
        "In": [
          "body"
        ],
        "Required": false,
        "Description": "User's last name"
      }
    ]
  },
  {
    "Name": "UploadSampleV2",
    "Path": "/samples/entities/samples/v2",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/octet-stream"
    },
    "Permission": "falconx-sandbox:write",
    "Description": "Upload a file to add to a sandbox submission",
    "Parameters": [
      {
        "Dynamic": "UserUuid",
        "Name": "X-CS-USERUUID",
        "Type": "string",
        "In": [
          "header"
        ],
        "Required": false,
        "Pattern": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}",
        "Description": "User identifier"
      },
      {
        "Dynamic": "Path",
        "Name": "body",
        "Type": "string",
        "In": [
          "body"
        ],
        "Pattern": "\\.(acm|apk|ax|axf|bin|chm|cpl|dll|doc|docx|drv|efi|elf|eml|exe|hta|jar|js|ko|lnk|o|ocx|mod|msg|mui|pdf|pl|ppt|pps|pptx|ppsx|prx|ps1|psd1|psm1|pub|puff|py|rtf|scr|sct|so|svg|svr|swf|sys|tsp|vbe|vbs|wsf|xls|xlsx)+$",
        "Required": true,
        "Description": "Path to the file"
      },
      {
        "Dynamic": "FileName",
        "Name": "file_name",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "Filename"
      },
      {
        "Dynamic": "Comment",
        "Name": "comment",
        "Type": "string",
        "In": [
          "query"
        ],
        "Required": false,
        "Description": "A comment to identify for other users to identify this sample"
      },
      {
        "Dynamic": "IsConfidential",
        "Name": "is_confidential",
        "Type": "bool",
        "In": [
          "query"
        ],
        "Required": false,
        "Default": "True",
        "Description": "Defines visibility of the sample in Falcon MalQuery [$true (default): File is only shown to users within your account, $false: File can be seen by other CrowdStrike customers]"
      }
    ]
  },
  {
    "Name": "VerifyAWSAccountAccess",
    "Path": "/cloud-connect-aws/entities/verify-account-access/v1",
    "Method": "POST",
    "Headers": {
      "Accept": "application/json",
      "ContentType": "application/json"
    },
    "Permission": "cloud-connect-aws:write",
    "Description": "Performs an Access Verification check on the specified AWS Account IDs",
    "Parameters": [
      {
        "Dynamic": "AccountIds",
        "Name": "ids",
        "Type": "array",
        "In": [
          "query"
        ],
        "Required": true,
        "Pattern": "\\d{12}",
        "Description": "One or more AWS account identifiers"
      }
    ]
  }
]
